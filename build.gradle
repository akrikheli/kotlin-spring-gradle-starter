buildscript {
    ext.kotlin_version = '1.3.61'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.4.RELEASE"
    }
}

plugins {
    id("io.gitlab.arturbosch.detekt").version("1.3.1")
    id 'jacoco'
}

repositories {
    mavenCentral()
    jcenter()
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.jetbrains.kotlin.plugin.spring'

bootJar {
    baseName = 'kotlin-spring-gradle-starter'
}

group 'ru.akrikheli'

ext {
    mockitoKotlinVersion = '2.1.0'
    mockitoInlineVersion = '2.8.47'
    mockwebserverVersion = '4.3.1'
    jacksonKotlinVersion = '2.9.10'
}

detekt {
    failFast = true // fail build on any finding
    buildUponDefaultConfig = true // preconfigure defaults
    config = files("$projectDir/config/detekt/detekt.yml")
    reports {
        html.enabled = true
        xml.enabled = false
        txt.enabled = false
    }
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = allprojects.test
    sourceDirectories = rootProject.files(allprojects.jacocoTestReport.sourceDirectories)
    classDirectories = rootProject.files(allprojects.jacocoTestReport.classDirectories)
    executionData = rootProject.files(allprojects.jacocoTestReport.executionData)

    reports {
        html.enabled = true
        xml.enabled = false
        csv.enabled = false
    }
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter', 'junit-vintage'
    }
}

check.dependsOn jacocoRootReport

// Api/Impl
dependencies {
    // spring
    implementation("org.springframework.boot:spring-boot-starter-actuator")

    // kotlin
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core"
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonKotlinVersion}")
}

// Tests
dependencies {
    // spring
    testImplementation("org.springframework.boot:spring-boot-starter-test")

    // jupiter
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testRuntime "org.junit.vintage:junit-vintage-engine"

    // kotlin
    testRuntime "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version"

    // mockito
    testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}")
    testImplementation("org.mockito:mockito-inline:${mockitoInlineVersion}")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}